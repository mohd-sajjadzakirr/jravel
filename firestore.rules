rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is the admin of a trip
    function isTripAdmin(tripId) {
      let trip = get(/databases/$(database)/documents/trips/$(tripId)).data;
      return request.auth != null && trip.adminId == request.auth.uid;
    }

    // Users collection - users can only access their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Trips collection and its subcollections
    match /trips/{tripId} {
      // Allow read if user is a member (tripId in user's tripIds array)
      allow read: if request.auth != null && tripId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.tripIds;
      allow write: if isTripAdmin(tripId);

      // Places to visit - members can read and write
      match /placesToVisit/{placeId} {
        allow read, write: if request.auth != null && tripId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.tripIds;
      }

      // Chat messages - members can read and write
      match /chat/{chatId} {
        allow read, write: if request.auth != null && tripId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.tripIds;
      }

      // Trip days - members can read and write
      match /days/{dayId} {
        allow read, write: if request.auth != null && tripId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.tripIds;
      }

      // Trip expenses - members can read and write
      match /tripExpenses/{expenseId} {
        allow read, write: if request.auth != null && tripId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.tripIds;
      }
    }
  }
} 